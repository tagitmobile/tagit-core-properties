####################################################################################################################################################
### Spring Boot Application Properties (see https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html)   ###
####################################################################################################################################################
debug=true

### Spring Migration ###
# Work-around for older version of Spring. Disable going forward.
spring.main.allow-circular-references=false
# Work-around for older version of Spring. Disable going forward.
spring.main.allow-bean-definition-overriding=false

### Spring Config Server and Discovery #### 
spring.application.name=<application-name>
spring.config.import=optional:configserver:

# HTTP Server port
server.port=8080
server.servlet.context-path=/

### JDK 21 ###
# [rj.added 2023.11.28] Spring Boot 3.2 + JDK21 feature
spring.threads.virtual.enabled=true

### Tomcat ###
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=100MB
server.tomcat.max-swallow-size=100MB

### GZIP Compression ###
# Enable response compression
server.compression.enabled=true
# The comma-separated list of mime types that should be compressed
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
# Compress the response only if the response size is at least 1KB
server.compression.min-response-size=1024

# Enable graceful shutdown for 20 seconds
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=20s

### HTTP/2 ###
# Enable HTTP/2 support, if the current environment supports it
server.http2.enabled=true

### Browser Caching ###
# Maximum time the response should be cached (in seconds) 
spring.web.resources.cache.cachecontrol.max-age=120
# The cache must re-validate stale resources with the server. Any expired resources must not be used without re-validating.
spring.web.resources.cache.cachecontrol.must-revalidate=true

### SSL ### comment if not required
#security.require-ssl=true

#server.ssl.key-store-type=PKCS12
#server.ssl.key-store=classpath:sample-keystore.p12
#server.ssl.key-store-password=tagit123
#server.ssl.key-alias=tomcat

### JSON ###
# Preferred JSON mapper to use for HTTP message conversion.
## [rj.added 2023.09.06] New to Spring Boot 3
#spring.http.converters.preferred-json-mapper=gson
spring.mvc.converters.preferred-json-mapper=gson

### GSON ###
spring.gson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
spring.gson.disable-html-escaping=false
spring.gson.serialize-nulls=false
spring.gson.pretty-printing=true

### MVC ###
# [rj.commented 2023.11.28] From Spring Boot 3.1.6 to 3.2.0
#spring.mvc.throw-exception-if-no-handler-found=true

# [rj.added 2022.02.21] Spring Boot 2.6.x and Spring Fox fix for: to start bean 'documentationPluginsBootstrapper'
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

# Note: Uncommenting below property will cause swagger UI to display org.springframework.web.servlet.NoHandlerFoundException: No handler found for GET /swagger-ui.html 
# With below property, the swagger UI URL becomes http://domain.com/static/swagger-ui.html
#spring.mvc.static-path-pattern=/static/**
spring.web.resources.static-locations=classpath:/static/

### Database ###
spring.datasource.hikari.pool-name=<application-name>-cp

### Database Connectivity and Dialect ###
# Define the DB connectivity properties and the dialect - how the ORM should speak to the database 
# The best practice is to load the driver classname, database platform, hibernate dialect via a separate profile
# NOTE: For server deployment in QA, UAT or PROD, always use JNDI configuration to optimize the DB connection usage and performance.
spring.datasource.jndi-name=<DataSource Name in Tomcat server.xml. Pick one: jdbc/MobeixAdminDataSource, jdbc/MXIAMDATASOURCE, jdbc/MXNFDataSource, jdbc/MXComponentDataSource. We are not introducing any new one unless it is for the project-specific data source.>
spring.datasource.url=jdbc:mysql://localhost:3306/mobeix
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.url=jdbc:sqlserver://localhost;databaseName=mobeix

#spring.datasource.username=dbma
#spring.datasource.password=tagit123
#spring.datasource.hikari.minimum-idle=3

### Database Dialect
# TIP: Use the Mobeix Cloud Config profiles to switch between dialects instead of changing this file

# MySQL (default)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Oracle
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
# MS SQL Server
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.database-platform=org.hibernate.dialect.SQLServerDialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect

### JPA ###    
spring.data.jpa.repositories.bootstrap-mode=default
spring.data.jpa.repositories.enabled=true
# [New in Spring Boot 2.2.x] https://stackoverflow.com/questions/59459624/slow-application-startup-time-after-upgrade-to-spring-boot-2-2-2
# This setting is used to control whether we should consult the JDBC metadata to determine certain Settings default values when the database may not be available (mainly in tools usage).
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

spring.jpa.show-sql=true

### JPA Properties ###
#spring.jpa.properties.*= # Additional native properties to set on the JPA provider.
spring.jpa.properties.hibernate.show_sql=true
### [New in Spring Boot 3.x] https://thorben-janssen.com/hibernate-slow-query-log/
spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=100
spring.jpa.properties.hibernate.generate_statistics=true

# JPA Batch Performance #
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

### JDBC Performance ###    
spring.datasource.hikari.auto-commit=false
# See [PRDRETAIL-69174] MRB - JBDC Hikari + Spring + Hibernate Auto-Commit Optimization - Delay Connection Acquisition).
# When set to true, ensure that auto-commit is disabled in Hikari and in Tomcat server XML
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true 

# Added in 2024.01.25 due to change in java.sql.Timestamp behavior in Hibernate 6 (see https://stackoverflow.com/a/75519746)
spring.jpa.properties.hibernate.timezone.default_storage=NORMALIZE

### DATA WEB (SpringDataWebProperties) ###
spring.data.web.pageable.default-page-size=10
spring.data.web.pageable.max-page-size=2000

### Spring Data Redis ###
# In case, Redis is required
#spring.data.redis.url=redis://localhost:6379
#spring.data.redis.client-type=jedis
#spring.data.redis.client-type=lettuce
#spring.data.redis.client-name=mx-redis-client
#spring.data.redis.connect-timeout=PT5S
#spring.data.redis.timeout=PT5S

### Performance ###
spring.jmx.enabled=false

### FLYWAY (FlywayProperties) ### Spring Boot Flyway doesn't work with Flyway 4.2.0
spring.flyway.enabled=false
spring.liquibase.enabled=false

# SERVER ERROR (ErrorProperties)
server.error.include-stacktrace=ON_PARAM

### Metrics ###    
management.endpoints.web.exposure.include=*
# To limit the exposed actuator endpoints
#management.endpoints.web.exposure.include=health,shutdown,prometheus
management.endpoint.shutdown.enabled=true

# [rj.commented 2023.11.28] From Spring Boot 3.1.6 to 3.2.0
#management.metrics.tags.application=${spring.application.name}
#management.metrics.tags.region=region
management.observations.key-values.application=${spring.application.name}
management.observations.key-values.region=region

####################################################################################################################################################
### Mobeix Properties   ###
####################################################################################################################################################

### Mobeix Logging ###
mxlogger.debug=true
mxlogger.enabled=true
# By default, CONSOLE is configured but in production, use either FILE or CONSOLEFILE
mxlogger.mode=CONSOLE
mxlogger.level=INFO
mxlogger.packagelevel={org.springframework.beans=DEBUG, org.springframework.context=DEBUG, org.springframework.web.servlet.mvc=DEBUG, org.hibernate.id=DEBUG, org.hibernate.SQL=DEBUG, org.hibernate.type.descriptor.sql.BasicBinder=TRACE, com.tagit=DEBUG, com.tagit.commons.core.web.rest.filter=TRACE, com.tagit.commons.core.boot.autoconfigure.env=TRACE, com.mobeix=DEBUG, com.mib.util=INFO, org.hibernate.orm.jdbc.bind=TRACE, org.hibernate.stat=TRACE, org.hibernate.SQL_SLOW=TRACE, org.hibernate.cache=TRACE}
#mxlogger.fileconfig=[{packagename=*, filename=<application-name>, logrolltime=DAILY, loglevel=INFO, filesize=100, maxfiles=100}]
mxlogger.location=/layers/mobeix/logs/<application-name>

####################################################################################################################################################
### TagitCore Properties   ###
####################################################################################################################################################

### Tagit Rest Client ###
rest.template.ssl.bypass=true
rest.template.ssl.connectTimeout=30000
rest.template.ssl.readTimeout=30000
# Tagit Rest Client Library @since 7.2.0
# OKHTTP is more performant than the SIMPLE http library that uses the JDK HTTP client
rest.template.http-library=OKHTTP
rest.template.connection-pool.max-idle=10
rest.template.connection-pool.keep-alive=300000
rest.template.logging=true

### Tagit Rest Client Caching ###
# Define these properties to configure the TagitCore Rest Template caching behavior.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+the+Rest+Client+-+Consuming+Rest+APIs#IntroductiontotheRestClientConsumingRestAPIs-Configuration
# TagitCore Rest Template Caching (seconds) @since 7.4.2
rest.template.cache.ttl=30
rest.template.cache.init-size=50
rest.template.cache.max-size=100
rest.template.cache.include-get-urls=/mxiam/usermanagement/merchants/rb/users/,/mxcomponentapi/usermanagement/merchants/rb/retrivedevicesbyuserid/,/dbmm-api/api/merchants/
rest.template.cache.include-post-urls= 
# TagitCore Rest Template Burst Caching (milliseconds) @since 7.4.2
rest.template.burst-cache.ttl=1000
rest.template.burst-cache.init-size=50
rest.template.burst-cache.max-size=100
rest.template.burst-cache.include-get-urls=/dbbm-api/api/payees/,/dbma-api/api/accounts/
rest.template.burst-cache.include-post-urls=  

# Recommended to turn off for storage and performance 
tagit.core.rest.audit-enabled=false

### Tagit Async Executor Configuration @since 2.8.0
# Define these properties to configure the default executor. By default, it is configured to use all available processors with queue capacity of 50.
# Best to leave these alone.
##tagit.core.executor.core-pool-size=2
##tagit.core.executor.max-pool-size=4
##tagit.core.executor.queue-capacity=50
##tagit.core.executor.thread-name-prefix=TagitCoreExecutor-

### Tagit Core Transparent Field-Level Encryption @since 3.2.0 ###
# Define these properties to configure database field-level encryption for specific DB fields. This is enabled by default.
# This is used to encrypt sensitive data so the encrypted values are stored in the DB instead of the plain text data. Each project must change their key.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+the+Data+Access+Services#IntroductiontotheDataAccessServices-TransparentField-LevelEncryption(TFLE)
#tagit.core.field-encryption.enabled=true
#tagit.core.field-encryption.key=123448404D635166546A576E5A723475
#tagit.core.field-encryption.strong-key=AA4A404E635266556A576E5A723475A778214125442A472D4B6150645367566C
##tagit.core.field-encryption.prefix=$#
##tagit.core.field-encryption.pool-size=2
#tagit.core.field-encryption.fpe-tweak=0
#tagit.core.field-encryption.fpe-key=1a23545861234d4dd58a2d61910dd8262

### Tagit Core Class Loading @since 7.3.3 ###

### TagitCore Loader for Product
# Define these properties when loading external JARs. Do this instead of injecting the JARs in the WAR.
# This is used in container deployment for loading product JARs for layered to the image or mounted to the image
# TIP: This must be enabled for applications and components that is extended or customized.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+Host+Integration+Data+Access+Service+Component#IntroductiontoHostIntegrationDataAccessServiceComponent-Deployment

tagit.core.loader.enabled=false
# Point this to the location of the external JARs
tagit.core.loader.path=/layers/mobeix/mx-data/mx-process-jars
# Change this to the package to be scanned within the provided JARs
tagit.core.loader.base-packages=com.tagit.mrb

### TagitCore Loader for Customizations and Extensions
# Define these properties when loading additional external JARs. Do this instead of injecting the JARs in the WAR.
# This is used in container deployment for loading customization or extension JARs for layered to the image or mounted to the image
# TIP: This must be enabled for applications and components that is extended or customized.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+Host+Integration+Data+Access+Service+Component#IntroductiontoHostIntegrationDataAccessServiceComponent-Deployment

tagit.core.loader-ext.enabled=false
# Point this to the location of the external JARs
tagit.core.loader-ext.path=/layers/mobeix/mx-data/mx-process-extjars
# Change this to the package to be scanned within the provided JARs
tagit.core.loader-ext.base-packages=com.tagit.mrb-ext

### Tagit Core Property Encryption @since 7.3.3 ###
# Define these properties to customize configuration property encryption. This is enabled by default. This is different from the DB Transparent Field Encryption.
# This is used to secure sensitive passwords so the encrypted values are stored instead of the plain password. Each project must change their key.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+Externalized+Configuration#IntroductiontoExternalizedConfiguration-SettingthePropertyConfiguration
#tagit.core.property-encryption.enabled=true
##tagit.core.property-encryption.impl-class=com.tagit.commons.core.integration.service.DefaultPropertyEncryptionServiceImpl
#tagit.core.property-encryption.key=462948404A635166546A576F5A723471
##tagit.core.property-encryption.algorithm=PBEWITHHMACSHA512ANDAES_256
##tagit.core.property-encryption.pool-size=2
##tagit.core.property-encryption.prefix=ENC(
##tagit.core.property-encryption.suffix=)
#tagit.core.property-encryption.warn-properties=password,username

### Tagit Core Cache @since 7.3.3.1 ###
# Define these properties to configure an in-memory cache to improve performance.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/%5BSpring%5D+Caching#id-[Spring]Caching-TagitCoreCache
tagit.core.cache.enabled=true
tagit.core.cache.default-ttl=500
tagit.core.cache.default-init-size=10
tagit.core.cache.default-max-size=50
tagit.core.cache.record-stats=true

### Tagit Core Mobeix Cache @since 7.4.4.0 ###
# Additional Individual cache can be configured by defining the property tagit.core.cache.spec.<cacheName>=<Caffeine Specification> (see https://github.com/ben-manes/caffeine/wiki/Specification)
tagit.core.cache.spec.mxReportCodeCache=initialCapacity=50,maximumSize=1000,expireAfterWrite=3600s,recordStats
tagit.core.cache.spec.mxAppRuleCache=initialCapacity=50,maximumSize=1000,expireAfterWrite=3600s,recordStats
tagit.core.cache.spec.mxAppMessageCache=initialCapacity=50,maximumSize=1000,expireAfterWrite=3600s,recordStats
tagit.core.cache.spec.mxAppCache=initialCapacity=5,maximumSize=10,expireAfterWrite=3600s,recordStats

### Tagit Core Flyway ###
# Define these properties for database versioning of the component or application involving its base schema and tables.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+the+Rest+Controller+-+Exposing+Rest+APIs+Without+HATEOS#IntroductiontotheRestControllerExposingRestAPIsWithoutHATEOS-APIDatabaseVersioning
# For MDB naming conventions, see https://edocs1.tagitmobile.com/confluence/display/PPDG/MDB+Development+Guide+and+Conventions#MDBDevelopmentGuideandConventions-DatabaseScriptVersionManagement
# IMPORTANT: DO NOT COMBINE MOBEIX SCRIPTS WITH APPLICATION OR COMPONENT SCRIPTS
tagit.core.flyway.enabled=true
tagit.core.flyway.table=<COMPONENT_ALIAS>_SCHEMA_HISTORY
tagit.core.flyway.location-suffix=<component_alias>/
#tagit.core.flyway.baseline-version=0 # Default to 0 
#tagit.core.flyway.validate-on-migrate=false

# Tagit Core Extensions Flyway for Customizations
# Define these properties for database versioning of the component or application extensions and customizations.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+the+Rest+Controller+-+Exposing+Rest+APIs+Without+HATEOS#IntroductiontotheRestControllerExposingRestAPIsWithoutHATEOS-APIDatabaseVersioning
# For MDB naming conventions, see https://edocs1.tagitmobile.com/confluence/display/PPDG/MDB+Development+Guide+and+Conventions#MDBDevelopmentGuideandConventions-DatabaseScriptVersionManagement
tagit.core.flyway_ext.enabled=true
tagit.core.flyway_ext.table=<COMPONENT_ALIAS>_EXT_SCHEMA_HISTORY
tagit.core.flyway_ext.location-suffix=<component_alias>_ext/
#tagit.core.flyway_ext.baseline-version=0
#tagit.core.flyway_ext.validate-on-migrate=false

### Mobeix Extensions ###
# Define these properties for handling Mobeix flyway product and customization entries
# Enable when Mobeix Configuration is required, i.e. read Mobeix Report Codes, Mobeix Merchant Message, etc. 
# NOTE: For server deployment in QA, UAT or PROD, always use JNDI configuration to optimize the DB connection usage and performance.
mobeix.ext.enabled=true
mobeix.ext.merchant-keyword=SY
mobeix.ext.language-code=en
mobeix.ext.datasource.jndi-name=<DataSource Name in Tomcat server.xml. Pick one: jdbc/MobeixAdminDataSource, jdbc/MXIAMDATASOURCE, jdbc/MXNFDataSource, jdbc/MXComponentDataSource. We are not introducing any new one unless it is for the project-specific data source.>
#mobeix.ext.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#mobeix.ext.datasource.username=mrb71
#mobeix.ext.datasource.password=tagit123
#mobeix.ext.datasource.hikari.minimum-idle=3

### Mobeix Extensions Flyway ###
# Define these properties for database versioning for Mobeix scripts that are not IAM related for the component or application, i.e. mobeix config, merchant messages, report codes, etc.
# Set to true of Mobeix Flyway Scripts for the component is available
# IMPORTANT: DO NOT COMBINE MOBEIX SCRIPTS WITH APPLICATION OR COMPONENT SCRIPTS
mobeix.ext.flyway.enabled=true
mobeix.ext.flyway.table=<COMPONENT_ALIAS>_MBX_SCHEMA_HISTORY
mobeix.ext.flyway.location-suffix=<component_alias>/mbx/
# Mobeix Extensions Flyway for Customizations
mobeix.ext.flyway_ext.enabled=true
mobeix.ext.flyway_ext.table=<COMPONENT_ALIAS>_MBX_EXT_SCHEMA_HISTORY
mobeix.ext.flyway_ext.location-suffix=<component_alias>/mbx_ext/

### Mobeix IAM Extensions ###
# Properties for handling IAM flyway product and customization entries
# NOTE: For server deployment in QA, UAT or PROD, always use JNDI configuration to optimize the DB connection usage and performance.
mobeix.iam.enabled=true
mobeix.iam.datasource.jndi-name=<DataSource Name in Tomcat server.xml. Pick one: jdbc/MobeixAdminDataSource, jdbc/MXIAMDATASOURCE, jdbc/MXNFDataSource, jdbc/MXComponentDataSource. We are not introducing any new one unless it is for the project-specific data source.>
#mobeix.iam.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#mobeix.iam.datasource.username=mrb71
#mobeix.iam.datasource.password=tagit123
#mobeix.iam.datasource.hikari.minimum-idle=3

### Mobeix IAM Extensions Flyway ###
# Define these properties for database versioning for Mobeix scripts that are IAM related for the component or application, i.e. IAM access control/permissions. 
# Set to true of Mobeix IAM Flyway Scripts for the component is available
# IMPORTANT: DO NOT COMBINE MOBEIX SCRIPTS WITH APPLICATION OR COMPONENT SCRIPTS
mobeix.iam.flyway.enabled=true
mobeix.iam.flyway.table=<COMPONENT_ALIAS>_IAM_SCHEMA_HISTORY
mobeix.iam.flyway.location-suffix=<component_alias>/iam/
# Mobeix IAM Extensions Flyway for Customizations
mobeix.iam.flyway_ext.enabled=true
mobeix.iam.flyway_ext.table=<COMPONENT_ALIAS>_IAM_EXT_SCHEMA_HISTORY
mobeix.iam.flyway_ext.location-suffix=<component_alias>/iam_ext/

### Tagit Core Business Service APIs or Feature Pack APIs @since 1.4.0 ###
# Define these propeties to configure application to make Rest API calls for @MobeixServiceApiChannelMapper annotated methods to a producer component
# For consumers, see https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+the+Strict+Channel+Mapper
# For producers, see https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+Mobeix+Service+Business+API+Controllers  

# The base URLs for Mobeix Business Service APIs
tagit.core.ext.mobeix-service-api.base-url=http://localhost:8080
# The secret keys for Mobeix Business Service APIs (uses JWEAlgorithm.DIR, EncryptionMethod.A128CBC_HS256)
# Refer to https://connect2id.com/products/nimbus-jose-jwt#example
tagit.core.ext.mobeix-service-api.secret-key=3D9752F58752DE26BEAE6DF566F6476A

# Modular Configuration
#tagit.core.ext.mobeix-service-api.<module>.base-url=http://localhost:9090
#tagit.core.ext.mobeix-service-api.<module>.secret-key=01B2C95B96C9E9354C9BFB31B6AA8384

### Tagit Core Host Service APIs @since 7.2.0 ###
# Define these properties to configure the application to make Rest API calls for @HostDAS annotated methods to a producer component
# The default style and serialization mode is REST and KRYO_DEFLATE by default.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+Host+Integration+Data+Access+Service+Component

# Enable these properties for Mobeix Process, Mobeix Feature Packs, DBMA
#tagit.core.ext.host-service-api.enabled=true
#tagit.core.ext.host-service-api.base-url=http://localhost:10100
##tagit.core.ext.host-service-api.style=REST # Default is REST, no need to change
##tagit.core.ext.host-service-api.serialization-mode=KRYO_DEFLATE # Default is REST, no need to change

# Enabling this property will enable the current component to access Host Service API calls
#tagit.core.ext.host-service-api.producer-enabled=true

# The secret keys for Mobeix Host Service APIs (uses JWEAlgorithm.DIR, EncryptionMethod.A128CBC_HS256)
# Refer to https://connect2id.com/products/nimbus-jose-jwt#example
#tagit.core.ext.host-service-api.secret-key=3D9752F58752DE26BEAE6DF566F6476A

# Modular Configuration
#tagit.core.ext.host-service-api.<module>.base-url=http://localhost:9090
#tagit.core.ext.host-service-api.<module>.secret-key=01B2C95B96C9E9354C9BFB31B6AA8384

### Tagit Core Multi-Tenancy @since 2.1.0 ###
#tagit.core.tenants=tenant-a,tenant-b
#tagit.core.tenants.tenant-a.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#tagit.core.tenants.tenant-a.datasource.username=sample
#tagit.core.tenants.tenant-a.datasource.password=tagit123
#tagit.core.tenants.tenant-b.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#tagit.core.tenants.tenant-b.datasource.username=sample
#tagit.core.tenants.tenant-b.datasource.password=tagit123

### Tagit Core Rest Metrics @since 2.1.0 ###
# To be replaced by Spring Boot Observability
#tagit.core.metrics.enabled=true
#tagit.core.metrics.threadpool.enabled=true

####################################################################################################################################################
### MDB Properties   ###
####################################################################################################################################################

# For Mobeix Digital Banking applications and components with the Host Simulator implementation
#tagit.host.simulator.enabled=true

####################################################################################################################################################
### Custom Properties   ###
####################################################################################################################################################

# Place Application-Specific or Custom Properties here 
