####################################################################################################################################################
### Mobeix Process TagitCore Properties ###
####################################################################################################################################################
## These properties are loaded when the Mobeix Process (mxprocess) is bootstapped and a separate TagitCore context is loaded.
## The properties are located from the following locations in the following order:
## - classpath:tagit-core.properties
## - file:${tagit-core-config:tagit-core.properties}
## - ${tagit-core-config.uri:http://localhost:8091}/${tagit-core.config.label:master}/${tagit-core-config.application:tagit-core}-${spring.profiles.active:default}.properties


### Data Source @since 2.8.0 ###
# Define these properties to configure the data source. 
# IMPORTANT: Whether these properties works or not, depends on the das-context.xml loaded in the Spring Application Context deployed and loaded by TagitCore filter.
# NOTE: For server deployment in QA, UAT or PROD, always use JNDI configuration to optimize the DB connection usage and performance.

# [rj.2021.07.30] commented for testing Tagit Core (Not Spring Boot) Spring Cloud Configuration
datasource.username=sample
#datasource.password=tagit123
datasource.password=ENC(a8JOozoMqrK+AySS13sOGtcqNNssL38GoTaawJm3eb+m1u3gJV5YJhudmvGEDiNK)

# Oracle
datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#datasource.driverClassName=oracle.jdbc.driver.OracleDriver
datasource.hikari.dataSourceClassName=oracle.jdbc.pool.OracleDataSource
hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
# MySQL 8
#datasource.url=jdbc:mysql://localhost:3306/mobeix
#datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#datasource.hikari.driverClassName=com.mysql.cj.jdbc.Driver
#hibernate.dialect=org.hibernate.dialect.MySQLDialect
# MySQL 5.7
#datasource.url=jdbc:mysql://localhost:3307/sample
#hibernate.dialect=org.hibernate.dialect.MySQLDialect
# PostgreSQL
#datasource.url=jdbc:postgresql://localhost:5432/postgres
#datasource.driverClassName=org.postgresql.Driver
#datasource.hikari.dataSourceClassName=org.postgresql.ds.PGSimpleDataSource
#hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect

### HikariCP Support @since 3.1.0 ###
datasource.hikari.minimumIdle=2
datasource.hikari.maximumPoolSize=5
datasource.hikari.idleTimeout=30000

hibernate.show-sql=true

### Tagit Rest Client ###
rest.template.ssl.bypass=true
rest.template.ssl.connectTimeout=30000
rest.template.ssl.readTimeout=30000
# Tagit Rest Client Library @since 7.2.0
# OKHTTP is more performant than the SIMPLE http library that uses the JDK HTTP client
rest.template.http-library=OKHTTP
rest.template.connection-pool.max-idle=10
rest.template.connection-pool.keep-alive=300000
rest.template.logging=true

### Tagit Rest Client Caching ###
# Define these properties to configure the TagitCore Rest Template caching behavior.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+the+Rest+Client+-+Consuming+Rest+APIs#IntroductiontotheRestClientConsumingRestAPIs-Configuration
# TagitCore Rest Template Caching (seconds) @since 7.4.2
rest.template.cache.ttl=30
rest.template.cache.init-size=50
rest.template.cache.max-size=100
rest.template.cache.include-get-urls=/mxiam/usermanagement/merchants/rb/users/,/mxcomponentapi/usermanagement/merchants/rb/retrivedevicesbyuserid/,/dbmm-api/api/merchants/
rest.template.cache.include-post-urls= 
# TagitCore Rest Template Burst Caching (milliseconds) @since 7.4.2
rest.template.burst-cache.ttl=1000
rest.template.burst-cache.init-size=50
rest.template.burst-cache.max-size=100
rest.template.burst-cache.include-get-urls=/dbbm-api/api/payees/,/dbma-api/api/accounts/
rest.template.burst-cache.include-post-urls=  

# Recommended to turn off for storage and performance 
tagit.core.rest.audit-enabled=false

### Tagit Async Executor Configuration @since 2.8.0
# Define these properties to configure the default executor. By default, it is configured to use all available processors with queue capacity of 50.
# Best to leave these alone.
##tagit.core.executor.core-pool-size=2
##tagit.core.executor.max-pool-size=4
##tagit.core.executor.queue-capacity=50
##tagit.core.executor.thread-name-prefix=TagitCoreExecutor-

### Tagit Core Transparent Field-Level Encryption @since 3.2.0 ###
# Define these properties to configure database field-level encryption for specific DB fields. This is enabled by default.
# This is used to encrypt sensitive data so the encrypted values are stored in the DB instead of the plain text data. Each project must change their key.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+the+Data+Access+Services#IntroductiontotheDataAccessServices-TransparentField-LevelEncryption(TFLE)
#tagit.core.field-encryption.enabled=true
#tagit.core.field-encryption.key=123448404D635166546A576E5A723475
#tagit.core.field-encryption.strong-key=AA4A404E635266556A576E5A723475A778214125442A472D4B6150645367566C
##tagit.core.field-encryption.prefix=$#
##tagit.core.field-encryption.pool-size=2
#tagit.core.field-encryption.fpe-tweak=0
#tagit.core.field-encryption.fpe-key=1a23545861234d4dd58a2d61910dd8262

### Tagit Core Property Encryption @since 7.3.3 ###
# Define these properties to customize configuration property encryption. This is enabled by default. This is different from the DB Transparent Field Encryption.
# This is used to secure sensitive passwords so the encrypted values are stored instead of the plain password. Each project must change their key.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+Externalized+Configuration#IntroductiontoExternalizedConfiguration-SettingthePropertyConfiguration
#tagit.core.property-encryption.enabled=true
##tagit.core.property-encryption.impl-class=com.tagit.commons.core.integration.service.DefaultPropertyEncryptionServiceImpl
#tagit.core.property-encryption.key=462948404A635166546A576F5A723471
##tagit.core.property-encryption.algorithm=PBEWITHHMACSHA512ANDAES_256
##tagit.core.property-encryption.pool-size=2
##tagit.core.property-encryption.prefix=ENC(
##tagit.core.property-encryption.suffix=)
#tagit.core.property-encryption.warn-properties=password,username

### Tagit Core Business Service APIs or Feature Pack APIs @since 1.4.0 ###
# Define these propeties to configure application to make Rest API calls for @MobeixServiceApiChannelMapper annotated methods to a producer component
# For consumers, see https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+the+Strict+Channel+Mapper
# For producers, see https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+Mobeix+Service+Business+API+Controllers  

# The base URLs for Mobeix Business Service APIs
tagit.core.ext.mobeix-service-api.base-url=http://localhost:8080
# The secret keys for Mobeix Business Service APIs (uses JWEAlgorithm.DIR, EncryptionMethod.A128CBC_HS256)
# Refer to https://connect2id.com/products/nimbus-jose-jwt#example
tagit.core.ext.mobeix-service-api.secret-key=3D9752F58752DE26BEAE6DF566F6476A

# Modular Configuration
#tagit.core.ext.mobeix-service-api.<module>.base-url=http://localhost:9090
#tagit.core.ext.mobeix-service-api.<module>.secret-key=01B2C95B96C9E9354C9BFB31B6AA8384

### Tagit Core Host Service APIs @since 7.2.0 ###
# Define these properties to configure the application to make Rest API calls for @HostDAS annotated methods to a producer component
# The default style and serialization mode is REST and KRYO_DEFLATE by default.
# See https://edocs1.tagitmobile.com/confluence/display/PPDG/Introduction+to+Host+Integration+Data+Access+Service+Component

# Enable these properties for Mobeix Process, Mobeix Feature Packs, DBMA
#tagit.core.ext.host-service-api.enabled=true
#tagit.core.ext.host-service-api.base-url=http://localhost:10100
##tagit.core.ext.host-service-api.style=REST # Default is REST, no need to change
##tagit.core.ext.host-service-api.serialization-mode=KRYO_DEFLATE # Default is REST, no need to change

# Enabling this property will enable the current component to access Host Service API calls
#tagit.core.ext.host-service-api.producer-enabled=true

# The secret keys for Mobeix Host Service APIs (uses JWEAlgorithm.DIR, EncryptionMethod.A128CBC_HS256)
# Refer to https://connect2id.com/products/nimbus-jose-jwt#example
#tagit.core.ext.host-service-api.secret-key=3D9752F58752DE26BEAE6DF566F6476A

# Modular Configuration
#tagit.core.ext.host-service-api.<module>.base-url=http://localhost:9090
#tagit.core.ext.host-service-api.<module>.secret-key=01B2C95B96C9E9354C9BFB31B6AA8384

### Tagit Core Multi-Tenancy @since 2.1.0 ###
#tagit.core.tenants=tenant-a,tenant-b
#tagit.core.tenants.tenant-a.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#tagit.core.tenants.tenant-a.datasource.username=sample
#tagit.core.tenants.tenant-a.datasource.password=tagit123
#tagit.core.tenants.tenant-b.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#tagit.core.tenants.tenant-b.datasource.username=sample
#tagit.core.tenants.tenant-b.datasource.password=tagit123

### TagitCore Metrics @since 3.1.0 ###
# To be replaced by Spring Boot Observability
#tagit.core.metrics.enabled=true
#tagit.core.metrics.default-port=9999
#tagit.core.metrics.class-loader.enabled=true
#tagit.core.metrics.jvm-memory.enabled=true
#tagit.core.metrics.jvm-gc.enabled=true
#tagit.core.metrics.processor.enabled=true
#tagit.core.metrics.jvm-thread.enabled=true
#tagit.core.metrics.hibernate.enabled=true
#tagit.core.metrics.threadpool.enabled=true
#tagit.core.metrics.cache.enabled=true
#tagit.core.metrics.hikaricp.enabled=true

####################################################################################################################################################
### MDB Properties   ###
####################################################################################################################################################

# For Mobeix Digital Banking applications and components with the Host Simulator implementation
#tagit.host.simulator.enabled=true

####################################################################################################################################################
### Custom Properties   ###
####################################################################################################################################################

# Place Application-Specific or Custom Properties here 
